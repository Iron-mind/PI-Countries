{"version":3,"sources":["components/Landing.jsx","App.js","reportWebVitals.js","reducers/index.js","store/index.js","index.js"],"names":["Landing","className","to","style","textDecoration","App","Fragment","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","moviesFavourites","moviesLoaded","movieDetail","rootReducer","state","action","type","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAKe,SAASA,IACtB,OACE,sBAAKC,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,6BACF,qBAAKA,UAAU,aAAf,SAEE,cAAC,IAAD,CAAMC,GAAG,QAAQC,MAAO,CAAEC,eAAgB,QAA1C,SACA,wBAAQH,UAAU,WAAlB,kCCIOI,MAZf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,IAAMK,SAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,KAAK,IAAIC,QAAS,cAAC,EAAD,aCGrBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCNRQ,EAAe,CACjBC,iBAAkB,GAClBC,aAAc,GACdC,YAAa,IAgBAC,MAZf,WAAoD,IAA/BC,EAA8B,uDAAtBL,EAAcM,EAAQ,uCASjD,OARQA,EAAOC,KAQRF,G,QCbIG,EADHC,YAAYL,EAAaM,YAAgBC,MCSrDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINO,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.e1557687.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Landing.css\";\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div className=\"landing\">\r\n        <h1 className=\"title\"> Countries Web </h1>\r\n      <div className=\"landingImg\">\r\n        \r\n        <Link to=\"/home\" style={{ textDecoration: 'none' }} >\r\n        <button className=\"btn-home\">  Go to Home </button>\r\n        </Link> \r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Landing from \"./components/Landing.jsx\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <Routes>\n          <Route  path=\"/\" element={<Landing/>} />\n        </Routes>\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState = {\r\n    moviesFavourites: [],\r\n    moviesLoaded: [],\r\n    movieDetail: {}\r\n  };\r\n   \r\n\r\n  function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"value\":\r\n            \r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n  }\r\n  \r\n  export default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nvar store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}